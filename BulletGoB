from PyQt5.QtCore import QPoint
from PyQt5.QtCore import QTimer
from PyQt5.QtGui import QColor
from PyQt5.QtGui import QPen
from PyQt5.QtWidgets import QLabel
import GLOBAL

class BulletB:
	"""Bullet contains:
		1 StartY
		3 Color
		4 Text( A String)
		5 Interval
		It uses the "window"  to draw it selft
	"""
	#这个叫做  类的属性  
	Count=0# 通过类名Bullet.bullet访问,就是一个静态变量
	Height=30 #一个Bullet占用的像素高度
	def __init__(self, Text, Color,Interval):
		BulletB.Count+=1
		#这个里面self给定的内容则只属于当前对象
		self.Bullet=QLabel(Text)
		self.Text=QStringLiteral(Text)
		self.Color=Color
		self.Interval=Interval 

	"""this method must be called when this 
		bullet is ready to shoot at the first time
	"""
	def prepare(self):
		self.timer=QTimer(self)
		self.timer.timeout.connect(self.moveSelf)
		self.timer.start(self.Interval) #start time
		self.StartY=(BulletB.Count%(GLOBAL.WINDOWHEIGHT/Bullet.Height))*Bullet.Height
		self.X=GLOBAL.WINDOWWIDTH
	"""Draw this bullet at position x,y ,use painter
		Returns True indicates this bullet is out of screen
	"""
	def drawSelf(self,painter):
		if(self.X<-800):
			del (self)
		painter.save()
		painter.setPen(QPen(self.Color))
		painter.drawText(self.X,self.StartY,self.Text)
		painter.restore()

	def __del__(self):
		# Count-=1
		print ("刚刚自动Delete了一个bullet\n")